[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = []
license = "Proprietary"
packages = [
    { include = "backend", from = "src" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]

[tool.poetry.dependencies]
python = ">=3.10,<4"
isort = "*"
flake8 = { version = ">=4.0.1" }
flake8-bugbear = "*"
flake8-commas = "*"
flake8-docstrings = "*"
flake8-per-file-ignores = "*"
mccabe = "*"
pep8-naming = "*"
autopep8 = "*"
mypy = "*"
pydocstyle = "*"
black = "*"

[tool.poetry.dev-dependencies]
pre-commit-hooks = "^4.3.0"

[build-system]
requires = [
    "poetry-core>=1.0.0",
]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --color=yes --disable-network --ds=config.settings"
testpaths = [
    "src",
]

[tool.coverage.run]
source = [
  "src",
]

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
ignore_missing_imports = true
exclude = [
    '^src/tresorbase/migrations/.*\.py$',
]
plugins = [
    "mypy_django_plugin.main",
    "mypy_drf_plugin.main",
]

[tool.django-stubs]
django_settings_module = "config.settings"

[tool.isort]
profile = "black"
line_length = 79
multi_line_output = 3
force_grid_wrap = "0"
ensure_newline_before_comments = "True"
include_trailing_comma = "true"
length_sort = "true"
use_parentheses = "true"
force_single_line = "false"
skip_glob = [".venv", "venv"]
known_third_party = [
    "xml",
]
src_paths = [
    "src",
]

[tool.black]
line-length = 79
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
